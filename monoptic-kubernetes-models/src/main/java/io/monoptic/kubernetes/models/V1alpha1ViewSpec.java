/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.monoptic.kubernetes.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * View spec.
 */
@ApiModel(description = "View spec.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-15T21:48:13.764Z[Etc/UTC]")
public class V1alpha1ViewSpec {
  public static final String SERIALIZED_NAME_MATERIALIZE = "materialize";
  @SerializedName(SERIALIZED_NAME_MATERIALIZE)
  private Boolean materialize;

  public static final String SERIALIZED_NAME_SQL = "sql";
  @SerializedName(SERIALIZED_NAME_SQL)
  private String sql;


  public V1alpha1ViewSpec materialize(Boolean materialize) {
    
    this.materialize = materialize;
    return this;
  }

   /**
   * Whether the view should be materialized.
   * @return materialize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the view should be materialized.")

  public Boolean getMaterialize() {
    return materialize;
  }


  public void setMaterialize(Boolean materialize) {
    this.materialize = materialize;
  }


  public V1alpha1ViewSpec sql(String sql) {
    
    this.sql = sql;
    return this;
  }

   /**
   * SQL query.
   * @return sql
  **/
  @ApiModelProperty(required = true, value = "SQL query.")

  public String getSql() {
    return sql;
  }


  public void setSql(String sql) {
    this.sql = sql;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1ViewSpec v1alpha1ViewSpec = (V1alpha1ViewSpec) o;
    return Objects.equals(this.materialize, v1alpha1ViewSpec.materialize) &&
        Objects.equals(this.sql, v1alpha1ViewSpec.sql);
  }

  @Override
  public int hashCode() {
    return Objects.hash(materialize, sql);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1ViewSpec {\n");
    sb.append("    materialize: ").append(toIndentedString(materialize)).append("\n");
    sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

